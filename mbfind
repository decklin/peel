#!/usr/bin/python

import sys
import getopt
try:
    import musicbrainz
except ImportError, e:
    print >>sys.stderr, 'import: %s' % e
    sys.exit(1)

def print_selected_album(mb):
    id = mb.GetIDFromURL(mb.GetResultData(musicbrainz.MBE_AlbumGetAlbumId))
    album = mb.GetResultData(musicbrainz.MBE_AlbumGetAlbumName)
    n = mb.GetResultInt(musicbrainz.MBE_AlbumGetNumTracks)

    artistid = mb.GetIDFromURL(
        mb.GetResultData(musicbrainz.MBE_AlbumGetAlbumArtistId))
    if artistid == musicbrainz.MBI_VARIOUS_ARTIST_ID:
        artist = '[Various Artists]'
    else:
        try:
            artist = mb.GetResultData1(musicbrainz.MBE_AlbumGetArtistName, 1)
        except musicbrainz.MusicBrainzError:
            artist = '[Unknown]'

    dur = 0
    for i in range(1, n+1):
        dur += mb.GetResultInt1(musicbrainz.MBE_AlbumGetTrackDuration, i)

    m, s = divmod(dur/1000, 60)
    print '%s %s - %s [%d:%02d, %d tracks]' % (id, artist, album, m, s, n)

if __name__ == '__main__':
    shortopts = 'a:b:v'
    longopts = ['artist=', 'album=', 'verbose']

    mb = musicbrainz.mb()
    mb.SetDepth(4)

    try:
        opts, args = getopt.getopt(sys.argv[1:], shortopts, longopts)
    except getopt.GetoptError, e:
        print >>sys.stderr, 'getopt: %s' % e
        sys.exit(1)

    artistspec = None
    albumspec = None
    verbose = False

    for opt, arg in opts:
        if opt in ('--artist', '-a'):
            artistspec = arg
        if opt in ('--album', '-b'):
            albumspec = arg
        if opt in ('--verbose', '-v'):
            verbose = True

    if albumspec:
        try:
            mb.QueryWithArgs(musicbrainz.MBQ_FindAlbumByName, [albumspec])
        except musicbrainz.MusicBrainzError, e:
            print >>sys.stderr, 'musicbrainz: %s' % e
            sys.exit(1)
        if verbose:
            print mb.GetResultRDF()
        n = mb.GetResultInt(musicbrainz.MBE_GetNumAlbums)
        for i in range(1, n+1):
            mb.Select1(musicbrainz.MBS_SelectAlbum, i)
            print_selected_album(mb)
            mb.Select(musicbrainz.MBS_Rewind)
    elif artistspec:
        try:
            mb.QueryWithArgs(musicbrainz.MBQ_FindArtistByName, [artistspec])
        except musicbrainz.MusicBrainzError, e:
            print >>sys.stderr, 'musicbrainz: %s' % e
            sys.exit(1)
        if verbose:
            print mb.GetResultRDF()
        n = mb.GetResultInt(musicbrainz.MBE_GetNumArtists)
        for i in range(1, n+1):
            mb.Select1(musicbrainz.MBS_SelectArtist, i)
            m = mb.GetResultInt(musicbrainz.MBE_GetNumAlbums)
            for j in range(1, m+1):
                mb.Select1(musicbrainz.MBS_SelectAlbum, j)
                print_selected_album(mb)
                mb.Select(musicbrainz.MBS_Back)
            mb.Select(musicbrainz.MBS_Rewind)
    else:
        print >>sys.stderr, 'args: must specify an album or artist name'
        sys.exit(1)
