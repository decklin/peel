Ears
====

This is a collection of programs that originally accumulated within my
"lastfmsubmitd" package. They gather data from MusicBrainz and use it to
rip CDs and/or submit to Last.fm.

Querying
========

mbget will read the CD in your computer's CD-ROM drive, query
MusicBrainz for its album information, and output it in YAML. This
format is like the one lastfmsubmitd uses, but it does not contain a
time of submission. Instead of reading from the CD-ROM drive, you can
also specify an album with --discid or --albumid. If a list of track
numbers is also specified, only those tracks will be printed.

If you are really lazy and don't want to put the CD in, you can use
mbfind, specify the album name with --album, and choose the album's MBID
from that. (You can also try specifying --artist, but at the moment it
does not really work and cannot be used in combination with --album.)

Ripping CDs
===========

peel, the CD ripper, invokes several programs in a pipeline:

  * mbget, as discussed above, outputs the track listing of the CD.

  * peel-encode reads a description of tracks to rip from standard
    input, invokes cdparanoia to read from the CD, then sends the audio to
    standard output, while also writing out encoded files (sort of like the
    unix "tee" command).

  * peel-buffer runs an audio-playing command, specified as the only
    command-line argument, with a large buffer in front of its standard
    input.

Conceptually, it looks like this:

    $ mbget | peel-encode | peel-buffer "play -t raw ..."

Which works (try it!), but using the high-level "peel" command allows
you to edit (and submit first, if necessary) the MusicBrainz data before
feeding it to peel-encode, knows the correct options for play or aplay,
and saves quite a bit of typing. Arguments given to peel will be passed
on to peel-encode. (TODO: passing arguments to mbget would also be
nice.)

Options
=======

peel can also rip and encode without outputting any audio, by specifying
the -q option; this will generally be CPU-bound, as the encoder no
longer has to wait for the sound card. If you have sox installed, it can
also rip from already-extracted WAV files, as produced by cdparanoia -B,
with the -c option; here, extraction will be IO-bound, so you can remove
the CD as quickly as possible. You can of course start peel -c while
cdparanoia -B is running, but be careful that your CPU is not too fast.

There are currently two encoders defined, oggenc and lame, and one
ripper, cdparanoia. You can set which one to use and their options in
~/.peelrc, which is a standard Python-style configuration file:

    [commands]
    rip = cdparanoia
    encode = oggenc

    [options]
    cdparanoia = -X
    oggenc = -q 5
    lame = --preset standard

(I do not endorse the use of lame or any other MP3 encoder, but I'm not
about to prevent you from using it.) I would love definitions for other
rippers or encoders out there.

The paths for encoded files are generated with Python-style string
interpolation:

    [output]
    path = %(artist)s/%(album)s/%(number)02d. %(artist)s - %(title)s

The keys available depend only on the input given to peel. I may or may
not consider using something like empy here. (TODO: albumartist tag.)

Replaying tracks from a CD
==========================

lastcd will take a list of songs encoded in this format, add submission
times to them as if they had all just been played in order, and write
them to lastfmsubmitd's spool or stdout.

Requirements
============

  * python-musicbrainz, available from
    http://musicbrainz.org/doc/PythonMusicbrainz.

Author and License
==================

Copyright Â© 2006-2009 Decklin Foster <decklin@red-bean.com>.

Permission is hereby granted, free of charge, to any person obtaining a
copy of this software and associated documentation files (the
"Software"), to deal in the Software without restriction, including
without limitation the rights to use, copy, modify, merge, publish,
distribute, sublicense, and/or sell copies of the Software, and to
permit persons to whom the Software is furnished to do so, subject to
the following conditions:

The above copyright notice and this permission notice shall be included
in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.
